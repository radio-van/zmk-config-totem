//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR  1
#define RSE  2

//&lt {
//    quick_tap_ms = <200>;
//};

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

/ {
     combos {
        compatible = "zmk,combos";

//      |------------------------|------------------------|
//      | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |
//      |                        |                        |
//      |     0  1  2  3  4      |       5  6  7  8  9    |
//      |    10 11 12 13 14      |      15 16 17 18 19    |
//      | 20 21 22 23 24 25      |      26 27 28 29 30 31 |
//      |          32 33 34      |      35 36 37          |
//      |------------------------|------------------------|

        // <jk>
        combo_bkspc {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp BACKSPACE>;
        };
        // <jm>
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 27>;
            bindings = <&macro_ent>;
        };
        // <df>
        combo_tab {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&macro_tab>;
        };
        // <fv>
        combo_esc {
            timeout-ms = <50>;
            key-positions = <13 24>;
            bindings = <&macro_esc>;
        };

        // , on <sd>
        // . on <kl>
        combo_comma {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp COMMA>;
        };
        combo_dot {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp DOT>;
        };

        // >> and << on <fg> and <hj>
        combo_shift_r {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&macro_sft_r>;
        };
        combo_shift_l {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&macro_sft_l>;
        };
    };

    macros {
        // EXPERIMENTAL
        macro_trans_kp: macro_trans_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>, <&macro_tap &kp MACRO_PLACEHOLDER>;
        };
        macro_trans: macro_trans {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &trans>;
        };

        // BASE
        macro_def: macro_default_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_tap &to DEF>
                ;
        };

        // FOR COMBOS
        macro_spc: macro_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp SPACE>;
        };
        macro_ent: macro_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp ENTER>;
        };
        macro_esc: macro_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to DEF &kp ESC>;
        };
        macro_tab: macro_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_def TAB>;
        };

        // for {} () ****...
        macro_dbl: macro_double_same_param {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                ;
        };
        macro_dbl_diff: macro_double_diff_params {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                ;
        };
        macro_quad: macro_quadro_same_param {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                , <&macro_tap &kp LEFT>
                ;
        };
        macro_trpl: macro_tripple_same_param {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LEFT>
                , <&macro_tap &kp LEFT>
                , <&macro_tap &kp LEFT>
                ;
        };

        // special
        macro_sft_l: macro_shift_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LT &kp LT>;
        };
        macro_sft_r: macro_shift_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GT &kp GT>;
        };
    };

    behaviors {
        // BASE

        // hold - some key
        // tap - some other key
        ht_s: hold_tap_simple {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        // hold - double key and place cursor between
        // tap - some key
        ht_dbl: hold_tap_double {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&macro_dbl>, <&kp>;
        };
        // tap - sticky layer: active until other key is pressed
        // hold - momentary layer: active while being held
        ht_mo_sl: hold_tap_layers_mo_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <50>;
            bindings = <&mo>, <&sl>;
        };

        // LAYERS

        // hold - sym
        // tap - sticky sym
        // doble-tap - toggle sym
        // tripple-tap - default layer
        td_num: tap_dance_num {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_mo_sl 2 2>, <&tog 2>, <&to DEF>;
        };
        // hold - nav
        // tap - sticky nav
        // doble-tap - toggle nav
        // tripple-tap - default layer
        td_nav: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;  // TODO check
            bindings = <&ht_mo_sl 3 3>, <&tog 3>, <&to DEF>;
        };

        // AUX tap dances
        td_cl: tap_dance_col {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp COLON>, <&kp SQT>;  // for Э
        };
        td_p: tap_dance_p {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&kp LBKT>, <&kp RBKT>;  // for Х Ъ
        };
        td_0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N0>, <&kp COLON>, <&kp SEMI>;
        };

        // double quotes
        td_dqt: tap_dance_dqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DQT>, <&macro_dbl DQT>, <&macro_trpl DQT>;
        };
        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&macro_dbl GRAVE>, <&macro_trpl GRAVE>;
        };
        td_sqt: tap_dance_sqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&macro_dbl SQT>, <&macro_trpl SQT>;
        };
        td_tilda: tap_dance_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TILDE>, <&macro_quad TILDE>;
        };

        // combine two keys in one
        td_comma: tap_dance_comma {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp BACKSLASH>;
        };
//      td_dot: tap_dance_dot {
//          compatible = "zmk,behavior-tap-dance";
//          #binding-cells = <0>;
//          tapping-term-ms = <200>;
//          bindings = <&kp DOT>, <&kp FSLH>;
//      };
        td_pipe: tap_dance_pipe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PIPE>, <&kp QMARK>;
        };
//      td_fslh: tap_dance_fslh {
//          compatible = "zmk,behavior-tap-dance";
//          #binding-cells = <0>;
//          tapping-term-ms = <200>;
//          bindings = <&kp FSLH>, <&kp BSLH>;
//      };

        // TD on alpha keys
        td_i_minus: tap_dance_i_minus {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp I>, <&kp MINUS>;
        };
        td_u_under: tap_dance_u_under {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp U>, <&kp UNDER>;
        };
        td_m_pipe: tap_dance_m_pipe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp M>, <&kp PIPE>;
        };
        td_n_qmark: tap_dance_n_qmark {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp N>, <&kp QMARK>;
        };
        td_v_tilda: tap_dance_v_tilda {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp V>, <&kp TILDE>;
        };

        // tap dance brackets
        td_par: tap_dance_par {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RPAR>, <&macro_dbl_diff LPAR RPAR>, <&kp LPAR>;
        };
        td_bkt: tap_dance_bkt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBKT>, <&macro_dbl_diff LBKT RBKT>, <&kp LBKT>;
        };
        td_brc: tap_dance_brc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBRC>, <&macro_dbl_diff LBRC RBRC>, <&kp LBRC>;
        };
        td_par_s: tap_dance_par_single {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&macro_dbl_diff LPAR RPAR>, <&kp LPAR>;
        };
        td_bkt_s: tap_dance_bkt_single {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBKT>, <&macro_dbl_diff LBKT RBKT>, <&kp LBKT>;
        };
        td_brc_s: tap_dance_brc_single {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBRC>, <&macro_dbl_diff LBRC RBRC>, <&kp LBRC>;
        };

        // for Russian layout
        td_lrbkt: tap_dance_left_right_bkt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

    };

    keymap {
        compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "BASE"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃   tmux    ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃  insert   ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    ALT    ┃    CTRL   ┃   SHIFT   ┃   ┃   SPACE   ┃   SYM     ┃   NAV     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &td_u_under &td_i_minus &kp O       &td_p    
                &kp A       &mt LALT S  &mt LCTRL D &mt LSHFT F &mt LGUI G      &kp H       &kp J       &kp K       &kp L       &td_cl    
    &kp LC(B)   &kp Z       &kp X       &kp C       &td_v_tilda &kp B           &kp N       &td_m_pipe  &td_comma   &kp DOT     &kp FSLH    &kp INSERT
                                        &sk LALT    &sk LCTRL   &kp LSHIFT      &lt 1 SPACE &td_num     &td_nav 
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                sym_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓               ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃           ┃     +     ┃     [     ┃     ]     ┃    []     ┃               ┃     !     ┃     @     ┃     #     ┃     *     ┃     _     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     ~     ┃     -     ┃     (     ┃     )     ┃    ()     ┃               ┃     &     ┃     ^     ┃     %     ┃     $     ┃     ;     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃           ┃           ┃     =     ┃     {     ┃     }     ┃    {}     ┃               ┃     <     ┃     >     ┃     ,     ┃     .     ┃     /     ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃     `     ┃     "     ┃     '     ┃               ┃    [[]]   ┃    DEF    ┃    NAV    ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛               ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷                           ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &none       &kp PLUS    &kp LBKT    &kp RBKT    &macro_dbl_diff LBKT RBKT   &kp EXCL    &kp AT_SIGN &kp HASH    &kp ASTERISK &kp UNDER
                &kp TILDE   &kp MINUS   &kp LPAR    &kp RPAR    &macro_dbl_diff LPAR RPAR   &kp AMPS    &kp CARET   &kp PERCENT &kp DOLLAR   &trans
    &trans      &none       &kp EQUAL   &kp LBRC    &kp RBRC    &macro_dbl_diff LBRC RBRC   &kp LT      &kp GT      &trans      &trans       &trans     &trans
                                        &td_grave   &td_dqt     &td_sqt                     &trans      &to DEF     &trans   
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                num_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NUM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     F1    ┃    F2     ┃     F3    ┃    F4     ┃    F5     ┃   ┃     ,     ┃     7     ┃     8     ┃    9      ┃     +     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     F6    ┃    F7     ┃     F8    ┃    F9     ┃    F12    ┃   ┃     .     ┃     4     ┃     5     ┃    6      ┃     -     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃           ┃           ┃           ┃           ┃           ┃           ┃   ┃     0     ┃     1     ┃     2     ┃    3      ┃     =     ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃   ┃  !SPACE   ┃   [DEF]   ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷            ╷           ╷           ╷           ╷           ╷   ╷             ╷           ╷           ╷           ╷           ╷           ╷

                &kp F1        &kp F2      &kp F3      &kp F4      &kp F5          &kp COMMA     &kp N7      &kp N8     &kp N9      &kp PLUS      
                &kp F6        &kp F7      &kp F8      &kp F9      &kp F12         &kp DOT       &kp N4      &kp N5     &kp N6      &kp MINUS 
    &trans      &none         &none       &none       &none       &none           &kp N0        &kp N1      &kp N2     &kp N3      &kp EQUAL   &trans         
                                          &trans      &trans      &trans          &macro_spc    &to DEF     &trans      
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NAV"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃    BT0    ┃           ┃           ┃   VOL -   ┃   VOL +   ┃   ┃   HOME    ┃    END    ┃           ┃           ┃           ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃    BT1    ┃           ┃           ┃           ┃   MUTE    ┃   ┃   LEFT    ┃   DOWN    ┃    UP     ┃   RIGHT   ┃           ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃  BOOTLDR  ┃    BT2    ┃           ┃           ┃           ┃  BT_CLR   ┃   ┃  PG_DWN   ┃   PG_UP   ┃           ┃           ┃           ┃  BOOTLDR  ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃   ┃           ┃   DEF     ┃    DEF    ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷            ╷           ╷           ╷           ╷           ╷   ╷             ╷           ╷           ╷           ╷           ╷           ╷

                &bt BT_SEL 0  &none       &none       &kp K_VOL_DN &kp K_VOL_UP    &kp HOME      &kp END     &none      &none       &none         
                &bt BT_SEL 0  &none       &none       &none        &kp K_MUTE      &kp LEFT      &kp DOWN    &kp UP     &kp RIGHT   &none     
    &bootloader &bt BT_SEL 0  &none       &none       &none        &bt BT_CLR      &kp PAGE_DOWN &kp PAGE_UP &none      &none       &none      &bootloader    
                                          &trans      &trans       &trans          &trans        &to DEF     &to DEF     
                        >;
                };
    };

};
